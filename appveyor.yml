#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.0.0.{build}

# Do not build on tags
skip_tags: false

# Start builds on tags only
skip_non_tags: false

# Skipping commits affecting specific files
skip_commits:
  files:
  - '**\AssemblyInfo.*'
  - 'CHANGELOG.md'

#	
pull_requests:
  do_not_increment_build_number: true
  
#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        $env:NecroBot2_Version = "$($env:APPVEYOR_REPO_TAG_NAME.Replace('v', ''))";
    }
    else
    {
        $env:NecroBot2_Version = "$($env:APPVEYOR_BUILD_VERSION)";
    }

# clone directory
clone_folder: c:\projects\necrobot2

# fetch repository as zip archive
shallow_clone: false

# set clone depth
#clone_depth:  5                     # clone entire repository history if not defined

# environment variables
environment:
  access_token:
    secure: txeoAG8V3UCSIPvwRYYuICFNrXTCsTl4QBJeCB3cP1jNFmis7X/HpRAab6PTkudi
  github_email:
    secure: XjJpgQrYELGzUrKFYR2QfhGYnQm0xS5s9LcK8aBSMbw=
  github_user:
    secure: luYDgdNyFIa58spIY64VOg==
  priv_key:
    secure: 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

# build cache to preserve files/folders between builds
#cache:
#  - packages -> **\packages.config  # preserve packages directory in the root of build folder but will reset it if packages.config is modified
#  - '%LocalAppData%\NuGet\Cache'

# scripts that run after cloning repository
install:
- git submodule update --init --recursive
- cd PoGo.NecroBot.GUI.Electron && npm install && cd ..

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '$(NecroBot2_Version)'
  assembly_file_version: "1.0.0.0"
  assembly_informational_version: '$(APPVEYOR_REPO_TAG_NAME)'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x86

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  # MSBuild verbosity level
  verbosity: minimal

# scripts to run before build
before_build:
  - nuget restore
  - cd PoGo.NecroBot.GUI.Electron && npm run pack && cd ..

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:
- ps: >-
    Remove-Item "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)" -Recurse -ErrorAction Ignore;
    New-Item -ItemType Directory -Force -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)";
    New-Item -ItemType Directory -Force -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)";
    if ($env:PLATFORM -eq "x86")
    {
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PoGo.NecroBot.CLI\bin\$($env:PLATFORM)\$($env:CONFIGURATION)" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2" -Force;
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2\GUI" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2GUI" -Force;
    }
    elseif ($env:PLATFORM -eq "x64")
    {
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PoGo.NecroBot.CLI\bin\$($env:PLATFORM)\$($env:CONFIGURATION)" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2" -Force;
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2\GUI" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2GUI" -Force;
    }
    elseif ($env:PLATFORM -eq "Any CPU")
    {
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PoGo.NecroBot.CLI\bin\$($env:CONFIGURATION)" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2" -Force;
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PoGo.NecroBot.CLI\bin\x86\$($env:CONFIGURATION)\GUI" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2GUI" -Force;
    }
    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PoGo.NecroBot.GUI.Electron\dist\win-ia32-unpacked" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\NecroBot2GUI.Electron" -Force;
        

# to run your custom scripts instead of automatic MSBuild
build_script:

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to disable automatic tests
test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  
  - path: '\$(PLATFORM)\$(CONFIGURATION)\NecroBot2'
    name: NecroBot2.Console

  - path: '\$(PLATFORM)\$(CONFIGURATION)\NecroBot2GUI'
    name: NecroBot2.GUI
    
  - path: '\$(PLATFORM)\$(CONFIGURATION)\NecroBot2GUI.Electron'
    name: NecroBot2.GUI.Electron

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

  # Deploy to GitHub Releases
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: '[CHANGELOG.md](https://github.com/Necrobot-Private/NecroBot/blob/master/CHANGELOG.md)'
    release: NecroBot2 $(APPVEYOR_REPO_TAG_NAME)
    auth_token: $(access_token)
    artifact: NecroBot2.Console;NecroBot2.GUI;NecroBot2.GUI.Electron
    draft: false
    prerelease: false
    force_update: true
    on:
      appveyor_repo_tag: true

# scripts to run before deployment
before_deploy:
- ps: >-
    $fileContent = "-----BEGIN RSA PRIVATE KEY-----`n";
    $fileContent += $env:priv_key.Replace(' ', "`n");
    $fileContent += "`n-----END RSA PRIVATE KEY-----`n";
    Set-Content "$env:USERPROFILE\.ssh\id_rsa" "$($fileContent)";
    Set-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n";

- git config --global credential.helper store
- git config --global user.email "%github_email%"
- git config --global user.name "%github_user%"
- git checkout -b Appveyor "%APPVEYOR_REPO_BRANCH%"
- SET PATH=C:\Ruby23\bin;%PATH%
- git add "PoGo.NecroBot.CLI/Properties/AssemblyInfo.cs"
- git add "PoGo.NecroBot.GUI/Properties/AssemblyInfo.cs"
- git add "PoGo.NecroBot.Logic/Properties/AssemblyInfo.cs"
- git commit -m "%APPVEYOR_REPO_TAG_NAME%"
- git checkout "%APPVEYOR_REPO_BRANCH%"
- git merge Appveyor
- git branch -d Appveyor
- git pull "origin" "%APPVEYOR_REPO_BRANCH%"
- git push "origin" "%APPVEYOR_REPO_BRANCH%"

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:

#---------------------------------#
#  notifications configuration    #
#---------------------------------#
notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/edd3d77d0afd21a6916b
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true
